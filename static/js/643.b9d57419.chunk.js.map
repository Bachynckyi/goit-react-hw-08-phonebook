{"version":3,"file":"static/js/643.b9d57419.chunk.js","mappings":"qOAIaA,EAAW,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACb,MAAsBA,EAAMC,cAArBR,EAAP,EAAOA,KAAMS,EAAb,EAAaA,MACb,OAAOT,GACH,IAAK,OAAQC,EAAQQ,GACnB,MACF,IAAK,QAASN,EAASM,GACrB,MACF,IAAK,WAAYJ,EAAYI,GAC3B,MACF,QACE,OAEb,EAQKC,EAAQ,WACVT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAED,OACI,4BACI,+CACA,kBAAMM,SAfO,SAAAJ,GACjBA,EAAMK,iBACNf,EAASgB,EAAAA,GAAAA,SAAwB,CAACb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAC/CM,GACH,EAWO,WACA,0BACI,qCACI,kBACII,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,oBACZC,SAAUb,EACVG,MAAOT,UAInB,0BACI,sCACI,kBACIc,KAAK,QACLd,KAAK,QACLgB,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZC,SAAUb,EACVG,MAAOP,UAInB,0BACI,yCACI,kBACIY,KAAK,WACLd,KAAK,WACLiB,UAAQ,EACRC,YAAY,wBACZC,SAAUb,EACVG,MAAOL,UAInB,mBAAQU,KAAK,SAAb,0BAIX,EAED,W","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from 'redux/auth/authOperations';\n\nexport const Register = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleChange = event => {\n            const {name, value} = event.currentTarget;\n            switch(name){\n                case 'name': setName(value);\n                  break;\n                case 'email': setEmail(value);\n                  break;\n                case 'password': setPassword(value);\n                  break;\n                default:\n                  return;\n            };\n    }; \n\n    const handleSubmit = event => {\n        event.preventDefault();\n        dispatch(authOperations.register({name, email, password}));\n        reset();\n    };\n\n    const reset = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n    };\n\n    return (\n        <div>\n            <h1>Registration form</h1>\n            <form onSubmit={handleSubmit}>\n            <div>\n                <label>Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        placeholder='Please enter name'\n                        onChange={handleChange}\n                        value={name}\n                    />\n                </label>\n            </div>\n            <div>\n                <label>Login\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        placeholder='Please enter login'\n                        onChange={handleChange}\n                        value={email}\n                        />\n                </label>\n            </div>\n            <div>\n                <label>Password\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        placeholder='Please enter password'\n                        onChange={handleChange}\n                        value={password}\n                        />\n                </label>\n            </div>\n            <button type='submit'>Sign Up</button>\n        </form>\n        </div>\n    );\n};\n\nexport default Register;"],"names":["Register","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","authOperations","type","pattern","title","required","placeholder","onChange"],"sourceRoot":""}